# server config
server:
  # zip
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css, application/javascript, application/json
    min-response-size: 1024
  # port
  port: 18080

spring:
  # enable profiles
  profiles:
    active: dev
  application:
    name: ${app.name}

  # format
  jackson:
    serialization:
      indent_output: true
    date-format: yyyy-MM-dd HH:mm:ss
    default-property-inclusion: non_empty
    locale: zh_CN
    time-zone: GMT+8

  # overwrite bean
  main:
    allow-bean-definition-overriding: true

  # db config
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${app.mysql.host}:${app.mysql.port}/${app.mysql.db}?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&serverTimezone=GMT%2B8
    username: ${app.mysql.username}
    password: ${app.mysql.password}
    # hikari config
    hikari:
      minimum-idle: 8
      maximum-pool-size: 16
      pool-name: ${app.name}-jdbc-pool
      transaction-isolation: TRANSACTION_READ_COMMITTED
      connection-timeout: 6000
      idle-timeout: 60000

  # redis config
  data:
    redis:
      port: ${app.redis.port}
      host: ${app.redis.host}
      database: ${app.redis.db}
      password: ${app.redis.password}



# mybatis-plus config
mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  mapper-locations: classpath*:mapper/**Mapper.xml
  type-aliases-package: com.yixihan.template.pojo

  # logic delete
  global-config:
    db-config:
      logic-delete-field: delFlag  # 全局逻辑删除的实体字段名(since 3.3.0,配置后可以忽略不配置步骤2)
      logic-delete-value: 1 # 逻辑已删除值(默认为 1)
      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)


# actuator
management:
  # open all points
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    # health point config
    health:
      enabled: true
      show-details: always

# log
logging:
  config: classpath:log4j2.xml

# openapi doc
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui
    operations-sorter: method

# cache 配置
cache:
  # 默认有效期
  timeout: 10
  # cache Name List
  cache-names:
    - name: userRoleCache
      timeout: 1
    - name: rolePermissionCache

# auth config
security:
  # controller package
  controller-package: com.yixihan.template.controller
  # whitelist list
  ignore-url-list:
    # swagger
    - "/swagger-ui/**"
    - "/webjars/**"
    - "/swagger-resources/**"
    - "/v3/**"
    - "/actuator/**"
    # static resource
    - "/**/*.js"
    - "/**/*.css"
    - "/**/*.html"
    - "/**/*.json"
    # auth
    - "/auth/**"
    # register
    - "/open/user/register/user"


# 第三方服务配置
third:
  # 验证码配置
  code:
    # 验证码生成长度
    len: ${app.third.code.len}
    # 验证码有效期, 单位: min
    timeout: ${app.third.code.timeout}
    # 验证码 Redis key
    common-key: ${app.third.code.common-key}
  
  # 短信配置
  sms:
    # mock
    mock: ${app.third.sms.mock}
    # type
    source: ${app.third.sms.source}
    # sms 接口配置
    # access key id
    secret-id: ${app.third.sms.secret-id}
    # access key secret
    secret-key: ${app.third.sms.secret-key}
    # 腾讯云 SmsSdkAppid
    sms-sdk-app-id: ${app.third.sms.sms-sdk-app-id}
    # 签名内容
    sign-name: ${app.third.sms.sign-name}

    # redis key
    login-key: ${app.third.sms.login-key}
    register-key: ${app.third.sms.register-key}
    update-password-key: ${app.third.sms.update-password-key}
    common-key: ${app.third.sms.common-key}

  # 邮件配置
  email:
    # mock
    mock: ${app.third.email.mock}
    # 邮件发送人姓名
    send-email: ${app.third.email.send-email}
    # 标题
    title: ${app.name}

    # redis key
    login-key: ${app.third.email.login-key}
    register-key: ${app.third.email.register-key}
    update-password-key: ${app.third.email.update-password-key}
    common-key: ${app.third.email.common-key}

  # 对象存储配置
  os:
    type: ${app.third.os.type}
    # Common 配置
    access-key: ${app.third.os.access-key}
    secret-key: ${app.third.os.secret-key}
    bucket-name: ${app.third.os.bucket-name}
    host: ${app.third.os.host}
    # SM.MS 配置 配置了 token 就不用配置 username 和 password
    token: ${app.third.os.token}
    username: ${app.third.os.username}
    password: ${app.third.os.password}
    # Local path
    local-path: ${app.third.os.local-path}
    # COS 配置
    region: ${app.third.os.region}
    # OSS 配置, 配置参考 https://cloud.tencent.com/document/product/436/6224
    endpoint: ${app.third.os.endpoint}
